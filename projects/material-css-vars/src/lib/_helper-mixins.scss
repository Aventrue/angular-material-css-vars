@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

@function hexToRGB($color) {
  @return (red($color), green($color), blue($color));
}

@mixin css-vars-root($varMap: null) {
  // Native CSS: assign CSS custom properties to the global scope
  @at-root :root {
    @each $varName, $varValue in $varMap {
      @if (type_of($varValue)==string) {
        #{$varName}: $varValue // to prevent quotes interpolation
      } @else {
        #{$varName}: #{$varValue}
      }
    }
  }
}
